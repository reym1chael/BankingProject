
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author PC
 */
public class AdminDashboardForm extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(AdminDashboardForm.class.getName());

    /**
     * Creates new form AdminDashboardForm
     */
    public AdminDashboardForm() {
        initComponents();
        //setBackground(new Color(0, 0, 0, 0));
        loadAccountsTable();
        //tableMain.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        //tableMain.getTableHeader().setOpaque(false);
        //tableMain.getTableHeader().setBackground(new Color(32, 136, 203));
        //tableMain.getTableHeader().setForeground(new Color(255, 255, 255));
        //tableMain.setRowHeight(25);
        tableMain.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        tableMain.setFont(new Font("Segoe UI", Font.PLAIN, 13));
        tableMain.setRowHeight(28);
        //tableMain.setShowGrid(false);
        tableMain.setIntercellSpacing(new Dimension(0, 0));
        tableMain.setSelectionBackground(new Color(30, 144, 255));
        tableMain.setSelectionForeground(Color.WHITE);

    }
    
    public Connection getConnection() {
    try {
        String url = "jdbc:sqlite:Data/jcappdb.sqlite"; // use your actual SQLite filename/path
        return DriverManager.getConnection(url);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Database connection failed: " + e.getMessage());
        return null;
    }
    }
    
    private void loadAccountsTable() {
        
        DefaultTableModel model = (DefaultTableModel) tableMain.getModel();
        model.setRowCount(0);

        String sql = "SELECT *, b.amount AS btc_amount, b.BTCaddress, " +
                 "e.amount AS eth_amount, e.ETHaddress, u.amount AS usdc_amount, u.USDCaddress " +
                 "FROM AccountsMain a " +
                 "LEFT JOIN btc b ON a.account_number = b.account_number " +
                 "LEFT JOIN eth e ON a.account_number = e.account_number " +
                 "LEFT JOIN usdc u ON a.account_number = u.account_number";

        try (Connection conn = getConnection(); PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery()) {

            while (rs.next()) {
                String accNum = rs.getString("account_number");
                String user = rs.getString("username");
                String fn = rs.getString("firstname");
                String ln = rs.getString("lastname");
                String mn = rs.getString("mobile_number");
                String pa = rs.getString("peso");
                String btc = rs.getString("btc_amount");
                String eth = rs.getString("eth_amount");
                String usdc = rs.getString("usdc_amount");
                String btcadd = rs.getString("BTCaddress");
                String ethadd = rs.getString("ETHaddress");
                String usdcadd = rs.getString("USDCaddress");

                model.addRow(new Object[]{accNum, user, fn, ln, mn, pa, btc, eth, usdc, btcadd, ethadd, usdcadd});
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error loading accounts: " + ex.getMessage());
        }
        tfCustID.setText("");
        tfUserN.setText("");
        tfFName.setText("");
        tfLName.setText("");
        tfMobile.setText("");
        tfPHPamount.setText("");
        tfBTCamount.setText("");
        tfETHamount.setText("");
        tfUSDCamount.setText("");
        tfBTCadd.setText("");
        tfETHadd.setText("");
        tfUSDCadd.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMain = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        tfCustID = new javax.swing.JTextField();
        tfUserN = new javax.swing.JTextField();
        tfFName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfLName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfMobile = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfPHPamount = new javax.swing.JTextField();
        tfBTCamount = new javax.swing.JTextField();
        tfBTCadd = new javax.swing.JTextField();
        tfETHamount = new javax.swing.JTextField();
        tfETHadd = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tfUSDCamount = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tfUSDCadd = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tableMain.setAutoCreateRowSorter(true);
        tableMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tableMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Username", "First name", "Last name", "Mobile Number", "PHP", "BTC", "ETH", "USDC", "BTC address", "ETH address", "USDC address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableMain.setFocusable(false);
        tableMain.setGridColor(new java.awt.Color(0, 0, 0));
        tableMain.setRowHeight(25);
        tableMain.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableMain.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableMain.setShowGrid(false);
        tableMain.setShowHorizontalLines(true);
        tableMain.getTableHeader().setReorderingAllowed(false);
        tableMain.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tableMainMouseDragged(evt);
            }
        });
        tableMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMainMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableMainMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tableMain);
        if (tableMain.getColumnModel().getColumnCount() > 0) {
            tableMain.getColumnModel().getColumn(0).setResizable(false);
            tableMain.getColumnModel().getColumn(1).setResizable(false);
            tableMain.getColumnModel().getColumn(2).setResizable(false);
            tableMain.getColumnModel().getColumn(3).setResizable(false);
            tableMain.getColumnModel().getColumn(4).setResizable(false);
            tableMain.getColumnModel().getColumn(5).setResizable(false);
            tableMain.getColumnModel().getColumn(6).setResizable(false);
            tableMain.getColumnModel().getColumn(7).setResizable(false);
            tableMain.getColumnModel().getColumn(8).setResizable(false);
            tableMain.getColumnModel().getColumn(9).setResizable(false);
            tableMain.getColumnModel().getColumn(10).setResizable(false);
            tableMain.getColumnModel().getColumn(11).setResizable(false);
        }
        tableMain.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(0, 64, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        btnDelete.setBackground(new java.awt.Color(0, 192, 0));
        btnDelete.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 0, 0));
        btnDelete.setText("Delete Selected");
        btnDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 3));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 192, 0));
        btnUpdate.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 0, 0));
        btnUpdate.setText("Update Selected");
        btnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "by-customer ID", "by-username", "by-mobile number", "by-last name" }));

        jTextField1.setBackground(new java.awt.Color(255, 255, 255));
        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(0, 0, 0));
        jTextField1.setText("search here");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, 0, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        tfCustID.setBackground(new java.awt.Color(255, 255, 255));
        tfCustID.setForeground(new java.awt.Color(0, 0, 0));
        tfCustID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfCustID.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tfCustID.setEnabled(false);

        tfUserN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfUserN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUserNActionPerformed(evt);
            }
        });

        tfFName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfFName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFNameActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Customer ID:");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Username:");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("First name");

        tfLName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfLName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfLNameActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Last name:");

        tfMobile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMobileActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Mobile number:");

        tfPHPamount.setBackground(new java.awt.Color(255, 255, 255));
        tfPHPamount.setForeground(new java.awt.Color(0, 0, 0));
        tfPHPamount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfPHPamount.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tfPHPamount.setFocusable(false);

        tfBTCamount.setBackground(new java.awt.Color(255, 255, 255));
        tfBTCamount.setForeground(new java.awt.Color(0, 0, 0));
        tfBTCamount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfBTCamount.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tfBTCamount.setFocusable(false);

        tfBTCadd.setBackground(new java.awt.Color(255, 255, 255));
        tfBTCadd.setForeground(new java.awt.Color(0, 0, 0));
        tfBTCadd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfBTCadd.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tfBTCadd.setFocusable(false);

        tfETHamount.setBackground(new java.awt.Color(255, 255, 255));
        tfETHamount.setForeground(new java.awt.Color(0, 0, 0));
        tfETHamount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfETHamount.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tfETHamount.setFocusable(false);

        tfETHadd.setBackground(new java.awt.Color(255, 255, 255));
        tfETHadd.setForeground(new java.awt.Color(0, 0, 0));
        tfETHadd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfETHadd.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tfETHadd.setFocusable(false);

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("PHP Amount:");

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("BTC Amount:");

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("BTC Address:");

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("ETH Amount:");

        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("ETH Address:");

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("USDC Amount:");

        tfUSDCamount.setBackground(new java.awt.Color(255, 255, 255));
        tfUSDCamount.setForeground(new java.awt.Color(0, 0, 0));
        tfUSDCamount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfUSDCamount.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tfUSDCamount.setFocusable(false);

        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("USDC Address:");

        tfUSDCadd.setBackground(new java.awt.Color(255, 255, 255));
        tfUSDCadd.setForeground(new java.awt.Color(0, 0, 0));
        tfUSDCadd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfUSDCadd.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tfUSDCadd.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfCustID, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfUserN, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfFName, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfLName, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfBTCadd, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfETHamount, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfETHadd, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfPHPamount, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfBTCamount, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfUSDCamount, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfUSDCadd, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(247, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfCustID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(tfPHPamount, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfUserN, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(tfBTCamount, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfUSDCamount, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfUSDCadd, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfFName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(tfBTCadd, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfLName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(tfETHamount, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(tfETHadd, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(79, 79, 79))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        List<JTextField> invalidFields = new ArrayList<>();

        if (tfUserN.getText().trim().isEmpty()) invalidFields.add(tfUserN);
        if (tfFName.getText().trim().isEmpty()) invalidFields.add(tfFName);
        if (tfLName.getText().trim().isEmpty()) invalidFields.add(tfLName);
        if (tfMobile.getText().trim().isEmpty()) invalidFields.add(tfMobile);

        if (!invalidFields.isEmpty()) {
            for (JTextField field : invalidFields) {
            Color original = field.getBackground();
            field.setBackground(new Color(255, 255, 150)); // subtle glow
            new Timer(4000, e -> field.setBackground(original)).start();
        }
        JOptionPane.showMessageDialog(null, "Please fill in all required fields before updating.");
        return;
        }
        
        int selectedRow = tableMain.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to update.");
            return;
        }
        
        int confirm = JOptionPane.showConfirmDialog(
            null,
            "Are you sure you want to apply these changes?",
            "Confirm Update",
            JOptionPane.YES_NO_OPTION
        );
        
        if (confirm != JOptionPane.YES_OPTION) {
            loadAccountsTable();
        }else{
            String accNumber = tfCustID.getText();
            String newUsername = tfUserN.getText();
            String newFirstname = tfFName.getText();
            String newLastname = tfLName.getText();
            String newMobile = tfMobile.getText();

        try (Connection conn = getConnection()) {
            String sql = "UPDATE AccountsMain SET username = ?, firstname = ?, lastname = ?, mobile_number = ? WHERE account_number = ?";
            PreparedStatement pst = conn.prepareStatement(sql);

            pst.setString(1, newUsername);
            pst.setString(2, newFirstname);
            pst.setString(3, newLastname);
            pst.setString(4, newMobile);
            pst.setString(5, accNumber);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "User updated successfully!");
            loadAccountsTable(); // refresh the JTable after update
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Update failed: " + ex.getMessage());
        }   
        }
    
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String sql = "";
        int selectedRow = tableMain.getSelectedRow();
        if (selectedRow != -1) {
            String accNumber = tableMain.getValueAt(selectedRow, 0).toString(); // assuming account_number is in column 0

            int confirm = JOptionPane.showConfirmDialog(null, 
            "Are you sure you want to delete user with Account #" + accNumber + "?",
            "Confirm Deletion", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                try (Connection conn = getConnection()) {
                // First delete child table entries
                PreparedStatement pstBTC = conn.prepareStatement("DELETE FROM BTC WHERE account_number = ?");
                pstBTC.setString(1, accNumber);
                pstBTC.executeUpdate();

                PreparedStatement pstETH = conn.prepareStatement("DELETE FROM ETH WHERE account_number = ?");
                pstETH.setString(1, accNumber);
                pstETH.executeUpdate();

                PreparedStatement pstUSDC = conn.prepareStatement("DELETE FROM USDC WHERE account_number = ?");
                pstUSDC.setString(1, accNumber);
                pstUSDC.executeUpdate();

                // Then delete main account
                PreparedStatement pstMain = conn.prepareStatement("DELETE FROM AccountsMain WHERE account_number = ?");
                pstMain.setString(1, accNumber);
                pstMain.executeUpdate();

                JOptionPane.showMessageDialog(null, "User deleted successfully.");
                // Optional: refresh table data here
                loadAccountsTable();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Deletion failed: " + ex.getMessage());
                    }
            }else {
            loadAccountsTable();}
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete.");
            }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tfFNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFNameActionPerformed

    private void tfUserNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUserNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfUserNActionPerformed

    private void tfLNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfLNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLNameActionPerformed

    private void tableMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMainMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tableMainMouseClicked

    private void tableMainMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMainMousePressed
        // TODO add your handling code here:
        tfCustID.setText("");
        tfUserN.setText("");
        tfFName.setText("");
        tfLName.setText("");
        tfMobile.setText("");
        tfPHPamount.setText("");
        tfBTCamount.setText("");
        tfETHamount.setText("");
        tfUSDCamount.setText("");
        tfBTCadd.setText("");
        tfETHadd.setText("");
        tfUSDCadd.setText("");
        int selectedRow = tableMain.getSelectedRow();
        if (selectedRow != -1) {
            tfCustID.setText(tableMain.getValueAt(selectedRow, 0).toString());
            tfUserN.setText(tableMain.getValueAt(selectedRow, 1).toString());
            tfFName.setText(tableMain.getValueAt(selectedRow, 2).toString());
            tfLName.setText(tableMain.getValueAt(selectedRow, 3).toString());
            tfMobile.setText(tableMain.getValueAt(selectedRow, 4).toString());
            tfPHPamount.setText(tableMain.getValueAt(selectedRow, 5).toString());
            tfBTCamount.setText(tableMain.getValueAt(selectedRow, 6).toString());
            tfETHamount.setText(tableMain.getValueAt(selectedRow, 7).toString());
            tfUSDCamount.setText(tableMain.getValueAt(selectedRow, 8).toString());
            tfBTCadd.setText(tableMain.getValueAt(selectedRow, 9).toString());
            tfETHadd.setText(tableMain.getValueAt(selectedRow, 10).toString());
            tfUSDCadd.setText(tableMain.getValueAt(selectedRow, 11).toString());
        }
    }//GEN-LAST:event_tableMainMousePressed

    private void tableMainMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMainMouseDragged
        // TODO add your handling code here:
        tfCustID.setText("");
        tfUserN.setText("");
        tfFName.setText("");
        tfLName.setText("");
        tfMobile.setText("");
        tfPHPamount.setText("");
        tfBTCamount.setText("");
        tfETHamount.setText("");
        tfUSDCamount.setText("");
        tfBTCadd.setText("");
        tfETHadd.setText("");
        tfUSDCadd.setText("");
        int selectedRow = tableMain.getSelectedRow();
        if (selectedRow != -1) {
            tfCustID.setText(tableMain.getValueAt(selectedRow, 0).toString());
            tfUserN.setText(tableMain.getValueAt(selectedRow, 1).toString());
            tfFName.setText(tableMain.getValueAt(selectedRow, 2).toString());
            tfLName.setText(tableMain.getValueAt(selectedRow, 3).toString());
            tfMobile.setText(tableMain.getValueAt(selectedRow, 4).toString());
            tfPHPamount.setText(tableMain.getValueAt(selectedRow, 5).toString());
            tfBTCamount.setText(tableMain.getValueAt(selectedRow, 6).toString());
            tfETHamount.setText(tableMain.getValueAt(selectedRow, 7).toString());
            tfUSDCamount.setText(tableMain.getValueAt(selectedRow, 8).toString());
            tfBTCadd.setText(tableMain.getValueAt(selectedRow, 9).toString());
            tfETHadd.setText(tableMain.getValueAt(selectedRow, 10).toString());
            tfUSDCadd.setText(tableMain.getValueAt(selectedRow, 11).toString());
        }
    }//GEN-LAST:event_tableMainMouseDragged

    private void tfMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMobileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        try {
            UIManager.setLookAndFeel(new com.formdev.flatlaf.FlatLightLaf());
            } catch (Exception e) {
                e.printStackTrace();
            }           

        java.awt.EventQueue.invokeLater(() -> new AdminDashboardForm().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tableMain;
    private javax.swing.JTextField tfBTCadd;
    private javax.swing.JTextField tfBTCamount;
    private javax.swing.JTextField tfCustID;
    private javax.swing.JTextField tfETHadd;
    private javax.swing.JTextField tfETHamount;
    private javax.swing.JTextField tfFName;
    private javax.swing.JTextField tfLName;
    private javax.swing.JTextField tfMobile;
    private javax.swing.JTextField tfPHPamount;
    private javax.swing.JTextField tfUSDCadd;
    private javax.swing.JTextField tfUSDCamount;
    private javax.swing.JTextField tfUserN;
    // End of variables declaration//GEN-END:variables
}
